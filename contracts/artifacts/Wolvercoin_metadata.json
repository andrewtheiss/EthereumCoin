{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "AdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "beacon",
						"type": "address"
					}
				],
				"name": "BeaconUpgraded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "ValueChanged",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "_nextPayout",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "_teachers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "period",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "addAddressForClassPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "period",
						"type": "uint256"
					}
				],
				"name": "getAllAddressesForClassPeriod",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "period",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "removeAddressFromClassPeriod",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "period",
						"type": "uint256"
					}
				],
				"name": "removeAddressesForClassPeriod",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "period",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "sendCoinToClassPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "upgradeTo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"upgradeTo(address)": {
					"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
				},
				"upgradeToAndCall(address,bytes)": {
					"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "TODO:  Weigh minting and fair launch vs max total supply and distribution    Implement staking https://hackernoon.com/implementing-staking-in-solidity-1687302a82cf  Document and detail token details",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Wolvercoin.sol": "Wolvercoin"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Wolvercoin.sol": {
			"keccak256": "0x7c94f10d028736e29a8c2e8c3409c840df6dc4dbc7d3f9dae83bab2a74637cb1",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd88676bb6c43985958a4910ace1e0ad240af0b54e1b77f346d8f5c0a29de720",
				"dweb:/ipfs/QmeSBST95vynsNjbqkmfN8LfBMaouXSHLzR8Fq8xCn4yCF"
			]
		},
		"contracts/includes/AddressUpgradeable.sol": {
			"keccak256": "0x01b96340fedbf63c993bc1716d4ef5f0bc8db0af2e0103a5b2c20ab398fc16d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://2daa051426bc70495e9911177c34716c5c113430879bbd1523592732b71fd433",
				"dweb:/ipfs/QmdVEoUgKGG23CusFCmbRpp6XGho9x52BL1Fb9EsvuiT4g"
			]
		},
		"contracts/includes/ContextUpgradeable.sol": {
			"keccak256": "0xa4d8ed92d61ed5a295c8bbd5a7ec0da0fa7af5a9eede7b97516e738247f5dcee",
			"license": "MIT",
			"urls": [
				"bzz-raw://3595d722506d052592a3222887655c651caaccea2ab380be9e614437d3d256df",
				"dweb:/ipfs/QmeSvaKH7SX7Y2bWYV8oAJmkW5rS38kRomRrpizPXF9Rvj"
			]
		},
		"contracts/includes/ERC1967UpgradeUpgradeable.sol": {
			"keccak256": "0x83d939d8995eb21161d8951483d898a5de008579cc52c8b7858b13e12ee172d8",
			"license": "MIT",
			"urls": [
				"bzz-raw://775268d680a5e970cda22281c81ef3ce57fa5aae0d55736a58670a6ca57f3917",
				"dweb:/ipfs/QmWAEWoDZGxBe64khAdVq4W5MHzxuuPUDiVa2KbarkUBRG"
			]
		},
		"contracts/includes/ERC20Upgradeable.sol": {
			"keccak256": "0xe873a208e14c08a8c408f262dca318b3901707c7df5f0d5845a19432c2634514",
			"license": "MIT",
			"urls": [
				"bzz-raw://812e5683f51dd9fbeaa299dacaabf4c0a1d4f141704126c150a54e0aca2892c1",
				"dweb:/ipfs/QmXQ45auTrMErKKfF6zso5r72faAsSNfpm6vhET4aNfHpJ"
			]
		},
		"contracts/includes/IBeaconUpgradeable.sol": {
			"keccak256": "0x1440f4b82d718504a4a5faf89faa03953fbd083546a37633d03bdfb770d8e5ce",
			"license": "MIT",
			"urls": [
				"bzz-raw://03fe0b015fdc5a562d17a72b32513cf9722884c49dc8c3ef268d6dbe35d6a2e5",
				"dweb:/ipfs/QmefBnrGjTSi8pbzNNKDpahPC39tDuTHb94p3nW5TKps5X"
			]
		},
		"contracts/includes/IERC20.sol": {
			"keccak256": "0x6a7ad162b0f5cdf5c5986a00af904728407eada0458c8a610ecc758c91ff2800",
			"license": "MIT",
			"urls": [
				"bzz-raw://70e189ddc436e9420f3827778510d9d2eb0bfc87b03db103ba6c65fd6d52d266",
				"dweb:/ipfs/Qmd1xpLzBSbK888Y2qdKMX5BMtNTuzbhkwVZVEb2eAXU2D"
			]
		},
		"contracts/includes/IERC20MetadataUpgradeable.sol": {
			"keccak256": "0x125ba32a6ae6710226a8c56c09d3185005d963f3de134658a5f6c70ac7ae9d0d",
			"license": "MIT",
			"urls": [
				"bzz-raw://533b90cbcee6e9fb50b0877a7e3c82e875a0379e3d8063ca8d7dac6b4f774afe",
				"dweb:/ipfs/QmbBeTnDL2DnEeyYLAuUvuqCoXCU1YLFyyNtGsf2A7Kyx2"
			]
		},
		"contracts/includes/IERC20Upgradeable.sol": {
			"keccak256": "0x769395a791d1f360431a54266535a3fe0eb3d4086f78600e5b1452ab1acca816",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d91391ab027d9152e924594329c879ed167a261e0a1c7cd725e9bbd2822bea5",
				"dweb:/ipfs/QmfTrf16iFJwPYC1wh6Uz86HM9JVrzfk24F9dT7BcX6gEP"
			]
		},
		"contracts/includes/IERC721Receiver.sol": {
			"keccak256": "0x90a757583c1a01e00be8727b6a738433278e37b88b24bb56e400aa76ea07755c",
			"license": "MIT",
			"urls": [
				"bzz-raw://414d83b8c805333eba2d96f8fab358fde720d998f3f4bb83d609cff6df560f4e",
				"dweb:/ipfs/QmThgNkCR4Gv6Jz8cnXRJLomi1EzqHEstJPjfhELWqHWs1"
			]
		},
		"contracts/includes/Initializable.sol": {
			"keccak256": "0x476523e15af92c3a58f7aba9ae2ee4f5dffac4ff3b3490cffaf2020f50c09b83",
			"license": "MIT",
			"urls": [
				"bzz-raw://fe615eefc638937427e9f0cad5a7538369971a8cc31d9247a4c670b7c266cc4c",
				"dweb:/ipfs/QmRW3bh4qxhjPDbNxTm2nMpSa7qpjMbKSbtTSQ1rVtY4yn"
			]
		},
		"contracts/includes/OwnableUpgradeable.sol": {
			"keccak256": "0xe29c81c2924d9ea64d741a30d8bb91f0ad46f03975f4beaa342d8506a8b4dfb7",
			"license": "MIT",
			"urls": [
				"bzz-raw://c54c2a4db2613d193687b0bec922059cd2d0ee58cede0a411c4b62d9430bed20",
				"dweb:/ipfs/QmWp6KMa73amxXU72Pmhc83a412akFVMi9qqeNyXs2LQzr"
			]
		},
		"contracts/includes/Owner.sol": {
			"keccak256": "0x1e624ada939528fff73575187024d951aa6d33d4cbaad97ecf1f3e2a7d717583",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://e3f3c6ab93acd1a8bd389f852149d59b6d713efc51458ff95bba42c3329fb0d1",
				"dweb:/ipfs/QmP7NEPrSbYRM4DzpJ31YUC2KNXUX4USuQk3jMNRUdzVyV"
			]
		},
		"contracts/includes/SafeMath.sol": {
			"keccak256": "0xa9900c322a5f15bc245dbfa6c7ff8d2180222d8d8a4065a56a4a9725edf4ddc0",
			"license": "MIT",
			"urls": [
				"bzz-raw://2d19ba1ccff3f4cdda470d3917e3dec57545c4dc2db5268f37583c0006c7555a",
				"dweb:/ipfs/QmTZLQheXqD4MGzodXTyyyC5H45fRwtvJgzfpFVEvE4G9B"
			]
		},
		"contracts/includes/StorageSlotUpgradeable.sol": {
			"keccak256": "0x318f02419d5b62ef2b7b089192d25ae1fccd0cb2ba60764ea276157d65e8dc62",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ea32e6014a4e9989e3693481a84742ef5245520fc0444363117f61a9e45870f",
				"dweb:/ipfs/QmYsUEWDEKCxcpepirVp3TqJytPpRvP7dhWpS5Y77gWTVp"
			]
		},
		"contracts/includes/UUPSUpgradeable.sol": {
			"keccak256": "0xa166b1970b4aee814415a5d505ca8603cf3ecff85a9b650df4e46cbf85f30e50",
			"license": "MIT",
			"urls": [
				"bzz-raw://637c343e856c084c1d270fd177aa5f4be620f1e5c203a4b95821b0011ec00eda",
				"dweb:/ipfs/QmSjjAw5j3DDHB4cCcd3YaGrEZtQLp7g6sahxSLBM4D3MF"
			]
		}
	},
	"version": 1
}