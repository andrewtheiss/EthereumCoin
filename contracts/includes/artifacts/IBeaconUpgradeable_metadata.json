{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This is the interface that {BeaconProxy} expects of its beacon.",
			"kind": "dev",
			"methods": {
				"implementation()": {
					"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/includes/IBeaconUpgradable.sol": "IBeaconUpgradeable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/includes/IBeaconUpgradable.sol": {
			"keccak256": "0x1440f4b82d718504a4a5faf89faa03953fbd083546a37633d03bdfb770d8e5ce",
			"license": "MIT",
			"urls": [
				"bzz-raw://03fe0b015fdc5a562d17a72b32513cf9722884c49dc8c3ef268d6dbe35d6a2e5",
				"dweb:/ipfs/QmefBnrGjTSi8pbzNNKDpahPC39tDuTHb94p3nW5TKps5X"
			]
		}
	},
	"version": 1
}