{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "ERC721 Token that can be irreversibly burned (destroyed).",
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"burn(uint256)": {
					"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenURI(uint256)": {
					"details": "See {IERC721Metadata-tokenURI}."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				}
			},
			"title": "ERC721 Burnable Token",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/includes/ERC721Burnable.sol": "ERC721Burnable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/includes/Address.sol": {
			"keccak256": "0x08ca3feab6ec25776c3f3dede27b2072959921392ea1151e7ada8bf7e9783608",
			"license": "MIT",
			"urls": [
				"bzz-raw://d75f70ac3b0762b8786490a57844240ce499630f49b91a11db7193f80200fc8a",
				"dweb:/ipfs/QmeikVyo7yoac1v5zR8W7NERoE4HynHUKXkgYe7j2DdDRb"
			]
		},
		"contracts/includes/Context.sol": {
			"keccak256": "0x5d0f925d07aed7df9aab02e0b57d60021fef2d85155ac1e0b37c890461047c0c",
			"license": "MIT",
			"urls": [
				"bzz-raw://c41bf64650fb7c98d94db76cfe2737a9f57ee885d2edcbc14e4f3efd6c2a49da",
				"dweb:/ipfs/QmQzpyT19tQ9atCLcbRt2y9svkoQB5RFEXmU2TKYHec9du"
			]
		},
		"contracts/includes/ERC165.sol": {
			"keccak256": "0xb753659a8c66ae0a8ca5f0312409347c9fddc90d04d862ec80986b1677dc0fb1",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6d38119d9b93ae38fa3637271f74539332bf2105161743ba2367dfb4c709f1f",
				"dweb:/ipfs/QmWFtkDxaJZ148QPqwR8ugaRicdhoTbU3dgaxtJ6MEGQ59"
			]
		},
		"contracts/includes/ERC721.sol": {
			"keccak256": "0xc7a1d4bd5b49736061c5170055077c0c577af1284907cd1b240475027f752ddd",
			"license": "MIT",
			"urls": [
				"bzz-raw://d2bd19772b95a01abb8b4339439a2f0a7c4f3926efdac8a74ac9dbc31f4d7ae7",
				"dweb:/ipfs/QmbtrC6QkmbncYiaH5kCyjFmrHGuaBfK51FXh3D1kPEUEp"
			]
		},
		"contracts/includes/ERC721Burnable.sol": {
			"keccak256": "0x70744527198558d9d5480cac0d80021f6f6e7f488ee69b115c90a52ceeaa8d42",
			"license": "MIT",
			"urls": [
				"bzz-raw://d66fb634d4aa85db1407a162c2913d032e275ad49c547ffa6d3e926979abaa57",
				"dweb:/ipfs/QmcuMzw8BBuhoMb5zv2w7rc9NTbVudFU1oHMRcaEtVzZHF"
			]
		},
		"contracts/includes/IERC165.sol": {
			"keccak256": "0x45fad00a8b56c2971664ee286914030ba6d777af3db201f34817b3255d296692",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbfb4f8a18f107ed6722b13b2bd7f3d46e2d4997ae2e0b0f2a77c4ffff1c04f3",
				"dweb:/ipfs/QmZJjN3tMMMG8bTfXgHL6Lf6cbNPHWZwsTRnCdNMD4isZG"
			]
		},
		"contracts/includes/IERC721.sol": {
			"keccak256": "0xa4f980d2eed93511bcf5a3e11dbe93c8e43c58d88b93a931802956202b3a2e28",
			"license": "MIT",
			"urls": [
				"bzz-raw://4321e784e1b5e6103a8b1069bc8e7637d7c050568fa04bdc0d5556fd35d16cf3",
				"dweb:/ipfs/QmSaomHzJ4XjRd28yZj5z5CnGtxK6JVzMUCBSDFopb1YnF"
			]
		},
		"contracts/includes/IERC721Metadata.sol": {
			"keccak256": "0xec888b2416d68d96a92449de9285e207da7ccba610d01d524bd3f7973e8b7a56",
			"license": "MIT",
			"urls": [
				"bzz-raw://b9d8a6d22c0a18ed653e31dc5d53fe345f44672ad2ce91bd273df908e7c49025",
				"dweb:/ipfs/QmYhvEL5AQTMLagQq4jT5jKn7XsuXptCH6L1HkBCB4qVa3"
			]
		},
		"contracts/includes/IERC721Receiver.sol": {
			"keccak256": "0x90a757583c1a01e00be8727b6a738433278e37b88b24bb56e400aa76ea07755c",
			"license": "MIT",
			"urls": [
				"bzz-raw://414d83b8c805333eba2d96f8fab358fde720d998f3f4bb83d609cff6df560f4e",
				"dweb:/ipfs/QmThgNkCR4Gv6Jz8cnXRJLomi1EzqHEstJPjfhELWqHWs1"
			]
		},
		"contracts/includes/Strings.sol": {
			"keccak256": "0x878afb03bce35fd0079b4a7d5dc798c9ae505c1d4fbb788372787cb9bf2afda4",
			"license": "MIT",
			"urls": [
				"bzz-raw://f99bcfece5989ed700de3aa089b7551e4aa4c944696a724378e1e5926c00d70d",
				"dweb:/ipfs/QmZhojT5PwNWxUojyt82cTsnT9nvh3qezrPzKox7XZArwC"
			]
		}
	},
	"version": 1
}